stages:
  - build
  - test
  - deploy
  - verify

# build docker image:
#   stage: build
#   image: docker:latest
#   services:
#     - docker:dind
#   before_script:
#     - test -f docker/Dockerfile
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#   script:
#     - docker build -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID -f docker/Dockerfile .
#     - docker tag $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID $CI_REGISTRY_IMAGE:latest
#     - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
#     - docker push $CI_REGISTRY_IMAGE:latest

push to github:
  stage: deploy
  image: 
    name: alpine/git:latest
    entrypoint: 
      - /bin/sh
  environment:
    name: github
  before_script:
    - mkdir -p ~/.ssh
    - echo -e "$SSH_CONFIG" > ~/.ssh/config
    - echo "$GITHUB_DEPLOY_KEY"|base64 -d > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
  script:
    - echo deploy here
  after_script:
    - echo Done :)
  rules:
    - if: $CI_COMMIT_BRANCH == "github"